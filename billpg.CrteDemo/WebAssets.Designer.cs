//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace billpg.CrteDemo {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class WebAssets {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal WebAssets() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("billpg.CrteDemo.WebAssets", typeof(WebAssets).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;xxxx&quot; 
        ///.
        /// </summary>
        internal static string GrantPermission {
            get {
                return ResourceManager.GetString("GrantPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;title&gt;CrossRequestTokenExchange DEMO - Issuer.&lt;/title&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///		&lt;h1&gt;Issuer Demo.&lt;/h1&gt;
        ///		&lt;p&gt;This is the issuer demo. This server will act as the &lt;i&gt;Issuer&lt;/i&gt; while yours will act as the &lt;i&gt;Initiator&lt;/i&gt;.&lt;/p&gt;
        ///
        ///		&lt;p&gt;CRTE normally requires a pre-existing relationship between the two participants. As that won&apos;t be possible for this demo, please set up a &lt;a href=&quot;/GrantPermission&quot;&gt;&lt;tt&gt;billpg-com-crte.json&lt;/tt&gt;&lt;/a&gt; file on your website before starting.
        ///
        ///		&lt;p&gt;Once that file is [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IssuerIndex {
            get {
                return ResourceManager.GetString("IssuerIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;CrossRequestTokenExchange DEMO&lt;/title&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    &lt;h1&gt;Cross Request Token Exchange&lt;/h1&gt;
        ///    &lt;p&gt;This website implements each side of the exchange, in a way that you can test against your own web service.&lt;/p&gt;
        ///
        ///    &lt;p&gt;See &lt;a href=&quot;https://github.com/billpg/CrossRequestTokenExchange&quot;&gt;this project&apos;s github&lt;/a&gt; for a full description of the exchange.&lt;/p&gt;
        ///
        ///    &lt;h2&gt;Issuer&lt;/h2&gt;
        ///
        ///    &lt;p&gt;This section is for your service to act as the &lt;b&gt;Initiator&lt;/b&gt; and this service will a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RootIndex {
            get {
                return ResourceManager.GetString("RootIndex", resourceCulture);
            }
        }
    }
}
